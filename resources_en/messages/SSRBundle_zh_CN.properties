
#replacement dialog preview
structural.replace.preview.dialog.title=Structural Replace Preview
replace.preview.oktext=\u66ff\u6362(&R)
replacement.code=\u66ff\u6362\u4ee3\u7801

# Search Dialog specific titles/options
structural.search.title=\u7ed3\u6784\u641c\u7d22
search.template=\u641c\u7d22\u6a21\u677f:
template.name.button=\u6a21\u677f\u540d\u79f0

save.template.description.button=\u4fdd\u5b58\u6a21\u677f
save.template.text.button=\u4fdd\u5b58\u6a21\u677f...
ssdialog.options.group.border=\u9009\u9879
new.template.defaultname=user defined

recursive.matching.checkbox=&Recursive matching

edit.variables.button=E&dit Variables...
history.button=&History...
copy.existing.template.button=E&xisting Templates...

open.in.new.tab.checkbox=Open in new &tab

search.dialog.scope.label=\u4f5c\u7528\u57df(&S)
search.dialog.file.type.label=File t&ype:
search.dialog.context.label=C&ontext:
search.dialog.file.dialect.label=D&ialect:

#search usage view specific
looking.in.progress.message=Looking in {0}
found.progress.message=Found {0} matches
occurrences.of=Template ''{0}''
occurrences.of.0.in.1=Template ''{0}'' in {1}
replace.occurrences.of.0.with.1.in.2=Replace ''{0}'' in {2} with ''{1}''
occurrence=\u5339\u914d
found.occurrences=Found Matches in {0}
targets.node.text=Structural Search Template

# search dialog messages
this.pattern.is.malformed.message=the specified pattern is malformed\n {0}
this.pattern.is.unsupported.message=the specified pattern is unsupported
incorrect.pattern.message=Incorrect pattern

used.templates.history.dialog.title=Used Templates History
existing.templates.dialog.title=Existing Templates
selecttemplate.template.preview=Template preview:
selecttemplate.template.label.please.select.template=<html><body><center>Please select a template in the tree on the left.</center></body></html>

# Replace Dialog specific titles/options
structural.replace.title=\u66ff\u6362\u7ed3\u6784
shorten.fully.qualified.names.checkbox=Sh&orten fully qualified names
replacement.template.label=Replacement template:

# Replace validation messages
unsupported.replacement.pattern.message=Unsupported replacement pattern {0}
malformed.replacement.pattern.message=Malformed replacement pattern {0}

#replacement usage view specific
preview.replacement.button=&Preview Replacement
do.replace.all.button=Replace &All
replace.selected.button=&Replace Selected

# predefined configuration categories
expressions.category=expressions
user.defined.category=user defined
xml_html.category=xml/html
generics.category=generics
misc.category=miscellaneous
metadata.category=comments, javadoc and metadata
class.category=class-based
operators.category=operators
j2ee.category=j2ee
interesting.category=interesting
used.templates=Used templates:

# predefined configuration names

predefined.configuration.method.calls=method calls
predefined.configuration.struts.1.1.actions=Struts 1.1 actions
predefined.configuration.ejb.interface=ejb interface
predefined.configuration.servlets=servlets
predefined.configuration.unboxing.in.method.calls=unboxing in method calls
predefined.configuration.boxing.in.method.calls=boxing in method calls
predefined.configuration.unboxing.in.declarations=unboxing in declarations
predefined.configuration.boxing.in.declarations=boxing in declarations
predefined.configuration.any.unboxing=unboxed expressions
predefined.configuration.any.boxing=boxed expressions
predefined.configuration.filters=filters
predefined.configuration.session.ejb=session ejb
predefined.configuration.fields.variables.read=fields/variables read
predefined.configuration.symbol=\u7b26\u53f7
predefined.configuration.inner.classes=inner classes
predefined.configuration.]junit.test.cases=junit test cases
predefined.configuration.ifs=if's
predefined.configuration.anonymous.classes=anonymous classes
predefined.configuration.javadoc.tags=javadoc tags
predefined.configuration.all.methods.of.the.class.within.hierarchy=all methods of the class (within hierarchy)
predefined.configuration.similar.methods.structure=similar methods structure
predefined.configuration.class.implements.two.interfaces=class implementing two interfaces
predefined.configuration.bean.info.classes=Bean info classes
predefined.configuration.all.expressions.of.some.type=all expressions of some type
predefined.configuration.variables.of.generic.types=variables of generic types
predefined.configuration.diamond.operators=diamond operators
predefined.configuration.comments=\u6ce8\u91ca
predefined.configuration.fields_variables.with.given.name.pattern.updated=fields/variables with given name pattern updated
predefined.configuration.trys=try's
predefined.configuration.block.dcls=block dcls
predefined.configuration.methods.of.the.class=methods of the class
predefined.configuration.instanceof=instanceof
predefined.configuration.implementors.of.interface.within.hierarchy=implementors of interface (within hierarchy)
predefined.configuration.generic.casts=generic casts
predefined.configuration.field.selections=field selections
predefined.configuration.fields.of.the.class=fields of the class
predefined.configuration.array.access=array access
predefined.configuration.usage.of.derived.type.in.cast=usage of derived type in cast
predefined.configuration.annotated.methods=annotated methods
predefined.configuration.not.annotated.methods=not annotated methods
predefined.configuration.annotation.declarations=annotation declarations
predefined.configuration.annotations=\u6279\u6ce8
predefined.configuration.annotated.class=annotated classes
predefined.configuration.entity.ejb=entity ejb
predefined.configuration.generic.methods=generic methods
predefined.configuration.cloneable.implementations=Cloneable implementations
predefined.configuration.xdoclet.metadata=XDoclet metadata
predefined.configuration.type.var.substitutions.in.intanceof.with.generic.types=type var substitutions in intanceof with generic types
predefined.configuration.singletons=singletons
predefined.configuration.switches=\u5f00\u5173
predefined.configuration.foreaches=foreach loops
predefined.configuration.interfaces=\u63a5\u53e3
predefined.configuration.string.literals=string literals
predefined.configuration.all.inner.classes.within.hierarchy=all inner classes (within hierarchy)
predefined.configuration.direct.subclasses=direct subclasses
predefined.configuration.javadoc.annotated.methods=javadoc annotated methods
predefined.configuration.javadoc.annotated.fields=javadoc annotated fields
predefined.configuration.assignments=\u5de5\u4f5c\u5206\u914d
predefined.configuration.casts=casts
predefined.configuration.serializable.classes.and.their.serialization.implementation=Serializable classes and their serialization implementation
predefined.configuration.annotated.fields=annotated fields
predefined.configuration.generic.classes=generic classes
predefined.configuration.javadoc.annotated.class=javadoc annotated class
predefined.configuration.constructors.of.the.class=constructors of the class
predefined.configuration.typed.symbol=typed symbol
predefined.configuration.all.fields.of.the.class=all fields of the class
predefined.configuration.instance.fields.of.the.class=instance fields of the class
predefined.configuration.packagelocal.fields.of.the.class=package-private fields of the class
predefined.configuration.classes=\u7c7b
predefined.configuration.new.expressions=new expressions
predefined.configuration.lambdas=lambdas
predefined.configuration.method.references=method references
predefined.configuration.string.concatenations=string concatenations

# edit variable constraint dialog options
invalid.regular.expression=Invalid regular expression: {0}
invalid.occurence.count=Invalid occurrence count
editvarcontraints.this.variable.is.target.of.the.search=This variable is target of the search
editvarcontraints.unlimited=\u4e0d\u53d7\u9650\u5236
editvarcontraints.maximum.count=Maximum count:
editvarcontraints.minimum.count=Minimum count:
editvarcontraints.apply.constraint.within.type.hierarchy=Apply constraint within type hierarchy
editvarcontraints.invert.condition=Invert condition
editvarcontraints.text.regular.expression.for.formal.argument.type.of.the.method=Expected type of expression (regexp):
editvarcontraints.text.regular.expression.for.java.expression.type=Expression type (regexp):
editvarcontraints.whole.words.only=Whole words only
editvarcontraints.text.regular.expression=Text/regexp:
editvarcontraints.edit.variables=Edit Variables

# tooltip message fragment on ss variables
no.constraints.specified.tooltip.message=no constraints specified
script.option.text=Script text:
occurs.tooltip.message=occurs: {0}
min.occurs.tooltip.message=min occurs: {0}, max occurs: {1}
target.tooltip.message=\u76ee\u6807
text.tooltip.message=text{0} like: {1}
exprtype.tooltip.message=type{2}{0} like: {1}
supertype.tooltip.message=\ or supertype
expected.type.tooltip.message=expected type{2}{0} like: {1}
not.tooltip.message=\ not
within.hierarchy.tooltip.message=search in supers
script.tooltip.message=script:\n {0}
within.constraints.tooltip.message=within {0}
not.within.constraints.tooltip.message=not within {0}
complete.match.variable.tooltip.message=Complete Match: {0}
replacement.variable.is.not.defined.message=Replacement variable {0} is not defined.
replacement.variable.is.not.valid=Replacement variable {0} has script code problem {1}
replacement.template.is.not.expression.error.message=The search template is a well formed expression, but the replacement template is not an expression.
replacement.template.expression.not.supported=Replacement of expression is not supported for {0}
replacement.not.supported.for.filetype=Replacement is not supported for {0} file type
search.template.is.not.expression.error.message=The search template is not an expression, but the replacement template is a well formed expression.
create.template.action.name=\u521b\u5efa\u6a21\u677f
remove.template.action.name=\u5220\u9664\u6a21\u677f

modify.editor.content.command.name=modify editor content
var.constraints.variables.border=\u53d8\u91cf
var.constraints.occurrences.count.border=Occurrences count
var.constraints.within.pattern.border=Contained in search template
var.constraints.script.constraints.border=Script constraints
var.constraints.expression.constraints.border=Expression constraints
var.constraints.text.constraints.border=Text constraints
different.strategies.for.top.level.nodes.error.message=Different strategies for top level nodes
option.is.not.recognized.error.message=Constraint ''{0}'' not recognized

error.only.one.target.allowed=Only one target allowed
error.condition.only.on.first.variable.reference=Constraints are only allowed on the first reference of a variable
error.two.different.type.constraints=Two different type constraints
error.incorrect.regexp.constraint=Incorrect reg exp constraint:{0} for {1}
error.expected.character=Character expected after single quote
error.overflow=Value overflow
error.expected.brace1=Digit, '}' or ',' expected
error.expected.brace2=Digit or '}' expected
error.expected.condition=Constraint expected after ''{0}''
error.expected.condition.or.bracket=Constraint or ']' expected
error.expected.condition.name=Constraint name missing
error.expected.value=''{0}'' expected
error.unexpected.value=Unexpected ''{0}''
invalid.modifier.type=Invalid modifier type {0}
error.reference.variable.name.expected=Name of reference variable argument expected on ''{0}'' option
error.no.argument.expected=No argument expected on ''{0}'' option
error.regular.expression.argument.expected=Regular expression argument expected on ''{0}'' option
error.pattern.argument.expected=Pattern argument expected on ''{0}'' option
error.script.argument.expected=Script argument expected on ''{0}'' option
error.cannot.invert=Cannot invert ''{0}'' option
error.only.applicable.to.complete.match=Constraint ''{0}'' is only applicable to Complete Match

SSRInspection.replace.with=\u66ff\u6362\u4e3a\u201c{0}\u201d
SSRInspection.family.name=Replace Structurally
SSRInspection.display.name=Structural Search Inspection
SSRInspection.add.search.template.button=Add Search Template...
SSRInspection.add.replace.template.button=Add Replace Template...
SSRInspection.selected.templates=Selected templates:
status.message=\u72b6\u6001:
overwrite.message=A template with the same name already exists. Replacing it will overwrite its current contents.
overwrite.title="{0}" Exists, Replace?
template.in.use.message=Template ''{0}'' is used from template ''{1}''. Are you sure you want to remove it?
ssr.will.not.find.anything=the specified pattern does not match anything in scope ''{0}''
predefined.configuration.class.static.blocks=static blocks in class
predefined.configuration.class.instance.initialization.blocks=instance initialization blocks
predefined.configuration.class.any.initialization.blocks=any class initialization block
predefined.configuration.logging.without.if=logging without if
predefined.configuration.class.with.parameterless.constructors=classes with parameterless constructors
predefined.configuration.static.fields.without.final=static fields that are not final
groovy.script.error=Groovy Script execution error: {0}
template.problem=Structural Search Inspection problem in template ''{0}''
problem=Structural Search problem: {0}
complete.match.variable.name=Complete Match
predefined.configuration.sample.method.invokation.with.constant.argument=sample method invocation with constant parameter
predefined.configuration.interfaces.having.no.descendants=interface that is not implemented or extended
predefined.configuration.enums=enums
regular.expression.help.label=Regular Expressions Help
edit.groovy.script.constraint.title=Edit Groovy Script Constraint
template.in.use.title=Template ''{0}'' In Use
